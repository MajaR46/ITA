{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\majar\\\\Documents\\\\FAKS\\\\MAG\\\\IT arhitekture\\\\Microfrontends\\\\paymentfrontend\\\\src\\\\UpdatePayment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [userId, setUserId] = useState('');\n  const [ticketId, setTicketId] = useState('');\n  const [amount, setAmount] = useState('');\n  const [paymentDate, setPaymentDate] = useState('');\n  const [paymentType, setPaymentType] = useState('');\n  useEffect(() => {\n    // Fetch user data based on userId\n    fetch('http://localhost:8100/web/payments/' + id).then(response => response.json()).then(data => {\n      setUserId(data.userId);\n      setTicketId(data.ticketId);\n      setAmount(data.amount);\n      setPaymentDate(data.paymentDate);\n      setPaymentType(data.paymentType);\n    }).catch(error => console.error('Error fetching payment:', error));\n  }, [id]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const payment = {\n      userId,\n      ticketId,\n      amount,\n      paymentDate,\n      paymentType\n    };\n    fetch('http://localhost:8100/web/payments/' + id, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payment)\n    }).then(() => {\n      console.log('Payment updated');\n      // Redirect to payment details page or somewhere else relevant\n      // window.location.href = '/payment-details/' + id;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Update Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" User id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Ticket id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: ticketId,\n        onChange: e => setTicketId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Payment date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: paymentDate,\n        onChange: e => setPaymentDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Payment type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: paymentType,\n        onChange: e => setPaymentType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Update, \"simlERROmD/UomVr9QQbsHrySCc=\", false, function () {\n  return [useParams];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Update","_s","id","userId","setUserId","ticketId","setTicketId","amount","setAmount","paymentDate","setPaymentDate","paymentType","setPaymentType","fetch","then","response","json","data","catch","error","console","handleSubmit","e","preventDefault","payment","method","headers","body","JSON","stringify","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/majar/Documents/FAKS/MAG/IT arhitekture/Microfrontends/paymentfrontend/src/UpdatePayment.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Update = () => {\r\n    const { id } = useParams(); \r\n    const [userId, setUserId] = useState('');\r\n    const [ticketId, setTicketId] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [paymentDate, setPaymentDate] = useState('');\r\n    const [paymentType, setPaymentType] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch user data based on userId\r\n        fetch('http://localhost:8100/web/payments/' + id)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setUserId(data.userId);\r\n                setTicketId(data.ticketId);\r\n                setAmount(data.amount);\r\n                setPaymentDate(data.paymentDate);\r\n                setPaymentType(data.paymentType);\r\n            })\r\n            .catch(error => console.error('Error fetching payment:', error));\r\n    }, [id]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const payment = { userId, ticketId, amount, paymentDate, paymentType };\r\n\r\n        fetch('http://localhost:8100/web/payments/' + id,  {\r\n            method: 'PUT',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(payment)\r\n        }).then(() => {\r\n            console.log('Payment updated');\r\n            // Redirect to payment details page or somewhere else relevant\r\n            // window.location.href = '/payment-details/' + id;\r\n        });\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h2> Update Payment</h2>\r\n            <form onSubmit={handleSubmit}>\r\n    \r\n                <label> User id:</label>\r\n                <input type=\"text\" required value={userId} onChange={(e)=>setUserId(e.target.value)} />\r\n    \r\n                <label> Ticket id:</label>\r\n                <input type=\"text\" required value={ticketId} onChange={(e)=>setTicketId(e.target.value)} />\r\n    \r\n                <label> Amount:</label>\r\n                <input type=\"text\" required value={amount} onChange={(e)=>setAmount(e.target.value)} />\r\n\r\n                <label> Payment date:</label>\r\n                <input type=\"date\" required value={paymentDate} onChange={(e)=>setPaymentDate(e.target.value)} />\r\n    \r\n                <label> Payment type:</label>\r\n                <input type=\"text\" required value={paymentType} onChange={(e)=>setPaymentType(e.target.value)} />\r\n\r\n                <button type=\"submit\">Update Payment</button>\r\n    \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
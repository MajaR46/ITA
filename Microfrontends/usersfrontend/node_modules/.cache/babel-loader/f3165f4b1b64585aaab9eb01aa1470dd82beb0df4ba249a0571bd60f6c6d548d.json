{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\majar\\\\Documents\\\\FAKS\\\\MAG\\\\IT arhitekture\\\\Microfrontends\\\\usersfrontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = () => {\n  _s();\n  const {\n    userId\n  } = useParams(); // Extract userId from route parameters\n  const [user, setUser] = useState(null); // State to store user data\n  const [error, setError] = useState(null); // State to store error\n  const [loading, setLoading] = useState(true); // State to track loading state\n\n  useEffect(() => {\n    // Fetch user data based on userId\n    fetch(`http://localhost:8100/web/users/${userId}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch user');\n      }\n      return response.json();\n    }).then(data => {\n      setUser(data); // Set user data\n      setLoading(false); // Update loading state\n    }).catch(error => {\n      setError(error.message); // Set error message\n      setLoading(false); // Update loading state\n    });\n  }, [userId]); // Trigger effect when userId changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this); // Render loading state\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this); // Render error state\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this); // Render message if user data is not available\n  }\n\n  // Render form with user data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: user.firstName,\n        onChange: e => setUser({\n          ...user,\n          firstName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User lastname:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: user.lastName,\n        onChange: e => setUser({\n          ...user,\n          lastName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: user.email,\n        onChange: e => setUser({\n          ...user,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Update, \"VGluBFqlMBT3TaO1isSYN1+O9Wo=\", false, function () {\n  return [useParams];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Update","_s","userId","user","setUser","error","setError","loading","setLoading","fetch","then","response","ok","Error","json","data","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","handleSubmit","type","value","firstName","onChange","e","target","lastName","email","_c","$RefreshReg$"],"sources":["C:/Users/majar/Documents/FAKS/MAG/IT arhitekture/Microfrontends/usersfrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Update = () => {\n    const { userId } = useParams(); // Extract userId from route parameters\n    const [user, setUser] = useState(null); // State to store user data\n    const [error, setError] = useState(null); // State to store error\n    const [loading, setLoading] = useState(true); // State to track loading state\n\n    useEffect(() => {\n        // Fetch user data based on userId\n        fetch(`http://localhost:8100/web/users/${userId}`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch user');\n                }\n                return response.json();\n            })\n            .then(data => {\n                setUser(data); // Set user data\n                setLoading(false); // Update loading state\n            })\n            .catch(error => {\n                setError(error.message); // Set error message\n                setLoading(false); // Update loading state\n            });\n    }, [userId]); // Trigger effect when userId changes\n\n    if (loading) {\n        return <div>Loading...</div>; // Render loading state\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>; // Render error state\n    }\n\n    if (!user) {\n        return <div>User not found</div>; // Render message if user data is not available\n    }\n\n    // Render form with user data\n    return (\n        <div className=\"update\">\n            <h2>Update User</h2>\n            <form onSubmit={handleSubmit}>\n                <label>User name:</label>\n                <input type=\"text\" value={user.firstName} onChange={(e) => setUser({ ...user, firstName: e.target.value })} />\n                <label>User lastname:</label>\n                <input type=\"text\" value={user.lastName} onChange={(e) => setUser({ ...user, lastName: e.target.value })} />\n                <label>User email:</label>\n                <input type=\"text\" value={user.email} onChange={(e) => setUser({ ...user, email: e.target.value })} />\n                <button type=\"submit\">Update User</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Update;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
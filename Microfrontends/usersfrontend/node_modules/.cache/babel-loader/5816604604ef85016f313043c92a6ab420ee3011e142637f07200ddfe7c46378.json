{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\majar\\\\Documents\\\\FAKS\\\\MAG\\\\IT arhitekture\\\\Microfrontends\\\\usersfrontend\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [users, setUsers] = useState([]);\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:8100/web/users');\n      if (!response.ok) {\n        throw new Error('Failed to fetch users');\n      }\n      const data = await response.json();\n      setUsers(data);\n      setIsPending(false);\n    } catch (error) {\n      setError(error.message);\n      setIsPending(false);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const handleDelete = id => {\n    fetch(`http://localhost:8100/web/users/${id}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`Failed to delete user: ${response.status} ${response.statusText}`);\n      }\n      // Check if response is JSON, if not, return text\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.indexOf('application/json') !== -1) {\n        return response.json();\n      } else {\n        return response.text();\n      }\n    }).then(data => {\n      if (typeof data === 'string') {\n        // Handle plain text response\n        console.log(data); // Log the plain text response\n      } else {\n        // Handle JSON response\n        setUsers(values => {\n          return values.filter(item => item.id !== id);\n        });\n        // Log notification to console\n        console.log(\"User deleted successfully\");\n      }\n    }).catch(error => {\n      console.error(\"Error deleting user:\", error);\n      // Log notification to console\n      console.log(\"Failed to delete user\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"1dIX2kPrkQqk6V2nAoh2lSKLO2s=\");\n_c = Home;\nconst UserList = ({\n  users,\n  handleDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"First name: \", user.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last name: \", user.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(user.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_c2 = UserList;\nexport default Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"UserList\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Home","_s","error","setError","isPending","setIsPending","users","setUsers","fetchUsers","response","fetch","ok","Error","data","json","message","handleDelete","id","method","then","status","statusText","contentType","headers","get","indexOf","text","console","log","values","filter","item","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","UserList","_c","map","user","firstName","lastName","email","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/majar/Documents/FAKS/MAG/IT arhitekture/Microfrontends/usersfrontend/src/Home.js"],"sourcesContent":["    import { useEffect, useState } from 'react';\r\n\r\n    const Home = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n        const response = await fetch('http://localhost:8100/web/users');\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch users');\r\n        }\r\n        const data = await response.json();\r\n        setUsers(data);\r\n        setIsPending(false);\r\n        } catch (error) {\r\n        setError(error.message);\r\n        setIsPending(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const handleDelete = id => {\r\n        fetch(`http://localhost:8100/web/users/${id}`, {\r\n          method: \"DELETE\",\r\n        })\r\n          .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error(`Failed to delete user: ${response.status} ${response.statusText}`);\r\n            }\r\n            // Check if response is JSON, if not, return text\r\n            const contentType = response.headers.get('content-type');\r\n            if (contentType && contentType.indexOf('application/json') !== -1) {\r\n              return response.json();\r\n            } else {\r\n              return response.text();\r\n            }\r\n          })\r\n          .then(data => {\r\n            if (typeof data === 'string') {\r\n              // Handle plain text response\r\n              console.log(data); // Log the plain text response\r\n            } else {\r\n              // Handle JSON response\r\n              setUsers(values => {\r\n                return values.filter(item => item.id !== id)\r\n              });\r\n              // Log notification to console\r\n              console.log(\"User deleted successfully\");\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error(\"Error deleting user:\", error);\r\n            // Log notification to console\r\n            console.log(\"Failed to delete user\");\r\n          });\r\n      }\r\n      \r\n      \r\n      \r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"home\">\r\n        {error && <div>{error}</div>}\r\n        {isPending && <div>Loading...</div>}\r\n        <UserList users={users} handleDelete={handleDelete} />\r\n        </div>\r\n    );\r\n    };\r\n\r\n    const UserList = ({ users, handleDelete }) => {\r\n    return (\r\n        <div>\r\n        {users.map(user => (\r\n            <div className=\"user-preview\" key={user.id}>\r\n                <p>First name: {user.firstName}</p>\r\n                <p>Last name: {user.lastName}</p>\r\n                <p>Email: {user.email}</p>\r\n                <button onClick={() => handleDelete(user.id)}>Delete</button>\r\n\r\n            </div>\r\n        ))}\r\n        </div>\r\n    );\r\n    };\r\n\r\n    export default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}